{"ast":null,"code":"import { actions } from \"./actions\";\nconst {\n  FETCH_PENDING,\n  FETCH_ERROR,\n  FETCH_POSTS,\n  FETCH_SINGLE_POST,\n  SET_FILTER\n} = actions;\n\nconst getVisiblePosts = (posts, category) => {\n  if (category === \"All\") {\n    return posts;\n  }\n\n  return posts.filter(p => p.category === category);\n};\n\nconst categories = [\"All\", \"technology\", \"science\", \"design\"];\nconst initialState = {\n  isFetching: false,\n  error: null,\n  posts: [],\n  postsHolder: [],\n  single: null,\n  categories: categories,\n  category: categories[0]\n};\nexport default function blogApp(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_PENDING:\n      return { ...state,\n        isFetching: true\n      };\n\n    case FETCH_ERROR:\n      return { ...state,\n        error: action.payload.error,\n        isFetching: false\n      };\n\n    case FETCH_POSTS:\n      return { ...state,\n        posts: action.payload.posts,\n        postsHolder: action.payload.posts,\n        error: null,\n        isFetching: false\n      };\n\n    case FETCH_SINGLE_POST:\n      return { ...state,\n        single: action.payload.single,\n        error: null,\n        isFetching: false\n      };\n\n    case SET_FILTER:\n      const {\n        postsHolder\n      } = state;\n      return { ...state,\n        category: action.payload.category,\n        posts: getVisiblePosts(postsHolder, action.payload.category)\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/var/www/html/REACT/API_REST/client/src/app/lib/state/reducer.js"],"names":["actions","FETCH_PENDING","FETCH_ERROR","FETCH_POSTS","FETCH_SINGLE_POST","SET_FILTER","getVisiblePosts","posts","category","filter","p","categories","initialState","isFetching","error","postsHolder","single","blogApp","state","action","type","payload"],"mappings":"AAAA,SAASA,OAAT,QAAwB,WAAxB;AACA,MAAM;AACJC,EAAAA,aADI;AAEJC,EAAAA,WAFI;AAGJC,EAAAA,WAHI;AAIJC,EAAAA,iBAJI;AAKJC,EAAAA;AALI,IAMFL,OANJ;;AAQA,MAAMM,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,MAAIA,QAAQ,KAAK,KAAjB,EAAwB;AACtB,WAAOD,KAAP;AACD;;AACD,SAAOA,KAAK,CAACE,MAAN,CAAaC,CAAC,IAAIA,CAAC,CAACF,QAAF,KAAeA,QAAjC,CAAP;AACD,CALD;;AAMA,MAAMG,UAAU,GAAG,CAAC,KAAD,EAAQ,YAAR,EAAsB,SAAtB,EAAiC,QAAjC,CAAnB;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE,KADO;AAEnBC,EAAAA,KAAK,EAAE,IAFY;AAGnBP,EAAAA,KAAK,EAAE,EAHY;AAInBQ,EAAAA,WAAW,EAAE,EAJM;AAKnBC,EAAAA,MAAM,EAAE,IALW;AAMnBL,EAAAA,UAAU,EAAEA,UANO;AAOnBH,EAAAA,QAAQ,EAAEG,UAAU,CAAC,CAAD;AAPD,CAArB;AASA,eAAe,SAASM,OAAT,CAAiBC,KAAK,GAAGN,YAAzB,EAAuCO,MAAvC,EAA+C;AAC5D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKnB,aAAL;AACE,aAAO,EAAE,GAAGiB,KAAL;AAAYL,QAAAA,UAAU,EAAE;AAAxB,OAAP;;AACF,SAAKX,WAAL;AACE,aAAO,EAAE,GAAGgB,KAAL;AAAYJ,QAAAA,KAAK,EAAEK,MAAM,CAACE,OAAP,CAAeP,KAAlC;AAAyCD,QAAAA,UAAU,EAAE;AAArD,OAAP;;AACF,SAAKV,WAAL;AACE,aAAO,EACL,GAAGe,KADE;AAELX,QAAAA,KAAK,EAAEY,MAAM,CAACE,OAAP,CAAed,KAFjB;AAGLQ,QAAAA,WAAW,EAAEI,MAAM,CAACE,OAAP,CAAed,KAHvB;AAILO,QAAAA,KAAK,EAAE,IAJF;AAKLD,QAAAA,UAAU,EAAE;AALP,OAAP;;AAOF,SAAKT,iBAAL;AACE,aAAO,EACL,GAAGc,KADE;AAELF,QAAAA,MAAM,EAAEG,MAAM,CAACE,OAAP,CAAeL,MAFlB;AAGLF,QAAAA,KAAK,EAAE,IAHF;AAILD,QAAAA,UAAU,EAAE;AAJP,OAAP;;AAMF,SAAKR,UAAL;AACE,YAAM;AAAEU,QAAAA;AAAF,UAAkBG,KAAxB;AACA,aAAO,EACL,GAAGA,KADE;AAELV,QAAAA,QAAQ,EAAEW,MAAM,CAACE,OAAP,CAAeb,QAFpB;AAGLD,QAAAA,KAAK,EAAED,eAAe,CAACS,WAAD,EAAcI,MAAM,CAACE,OAAP,CAAeb,QAA7B;AAHjB,OAAP;;AAKF;AACE,aAAOU,KAAP;AA5BJ;AA8BD","sourcesContent":["import { actions } from \"./actions\";\nconst {\n  FETCH_PENDING,\n  FETCH_ERROR,\n  FETCH_POSTS,\n  FETCH_SINGLE_POST,\n  SET_FILTER\n} = actions;\n\nconst getVisiblePosts = (posts, category) => {\n  if (category === \"All\") {\n    return posts;\n  }\n  return posts.filter(p => p.category === category);\n};\nconst categories = [\"All\", \"technology\", \"science\", \"design\"];\nconst initialState = {\n  isFetching: false,\n  error: null,\n  posts: [],\n  postsHolder: [],\n  single: null,\n  categories: categories,\n  category: categories[0]\n};\nexport default function blogApp(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_PENDING:\n      return { ...state, isFetching: true };\n    case FETCH_ERROR:\n      return { ...state, error: action.payload.error, isFetching: false };\n    case FETCH_POSTS:\n      return {\n        ...state,\n        posts: action.payload.posts,\n        postsHolder: action.payload.posts,\n        error: null,\n        isFetching: false\n      };\n    case FETCH_SINGLE_POST:\n      return {\n        ...state,\n        single: action.payload.single,\n        error: null,\n        isFetching: false\n      };\n    case SET_FILTER:\n      const { postsHolder } = state;\n      return {\n        ...state,\n        category: action.payload.category,\n        posts: getVisiblePosts(postsHolder, action.payload.category)\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}